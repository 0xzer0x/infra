#!/usr/bin/env bash

# Theme
theme="${XDG_CONFIG_HOME:-${HOME}/.config}/rofi/powermenu/style.rasi"

# CMDs
uptime=$(uptime -p | sed -e 's/up //g')
# Options
shutdown=''
reboot=''
lock=''
suspend=''
logout=''
yes=''
no=''

# Rofi CMD
rofi_cmd() {
  rofi -dmenu \
    -p "Uptime: $uptime" \
    -mesg "Uptime: $uptime" \
    -theme "${theme}"
}

# Confirmation CMD
confirm_cmd() {
  rofi -theme-str 'window {location: center; anchor: center; fullscreen: false; width: 350px;}' \
    -theme-str 'mainbox {children: [ "message", "listview" ];}' \
    -theme-str 'listview {columns: 2; lines: 1;}' \
    -theme-str 'element-text {horizontal-align: 0.5;}' \
    -theme-str 'textbox {horizontal-align: 0.5;}' \
    -dmenu \
    -p 'Confirmation' \
    -mesg 'Are you sure?' \
    -theme "${theme}"
}

# Ask for confirmation
confirm_exit() {
  echo -e "$yes\n$no" | confirm_cmd
}

# Pass variables to rofi dmenu
run_rofi() {
  echo -e "$lock\n$suspend\n$logout\n$reboot\n$shutdown" | rofi_cmd
}

# Execute Command
run_cmd() {
  selected="$(confirm_exit)"
  if [[ "$selected" == "$yes" ]]; then
    if [[ $1 == '--shutdown' ]]; then
      systemctl poweroff
    elif [[ $1 == '--reboot' ]]; then
      systemctl reboot
    elif [[ $1 == '--suspend' ]]; then
      systemctl suspend && swaylock
    elif [[ $1 == '--logout' ]]; then
      if [[ "$XDG_CURRENT_DESKTOP" == 'Hyprland' ]]; then
        hyprctl dispatch exit
      elif [[ "$XDG_CURRENT_DESKTOP" == 'sway' || "$XDG_CURRENT_DESKTOP" == "swayfx-nvidia" ]]; then
        swaymsg exit
      elif [[ "$XDG_CURRENT_DESKTOP" == 'i3' ]]; then
        i3-msg exit
      elif [[ "$XDG_CURRENT_DESKTOP" == 'plasma' ]]; then
        qdbus org.kde.ksmserver /KSMServer logout 0 0 0
      fi
    fi
  else
    exit 0
  fi
}

# Actions
chosen="$(run_rofi)"
case ${chosen} in
"$shutdown")
  run_cmd --shutdown
  ;;
"$reboot")
  run_cmd --reboot
  ;;
"$suspend")
  run_cmd --suspend
  ;;
"$logout")
  run_cmd --logout
  ;;
"$lock")
  if command -v swaylock &>/dev/null; then
    swaylock
  else
    notify-send -u critical "Screen Lock Failed" "Required binary not found: swaylock"
  fi
  ;;
esac
